---
import Picture from "@components/media/Picture.astro";
import { marked } from "marked";
import { Icon } from "astro-icon/components";
import Button from "@components/navigation/Button.astro";
import VideoInline from "@components/media/VideoInline.vue";
import VideoDialog from "@components/dialog/VideoDialog.vue";
import VideoDialogBtn from "@components/media/VideoDialogBtn.vue";

const { title, hero } = Astro.props;
const { slug } = Astro.params;
const hasImage = !!hero?.media?.thumbnail?.trim() || false;
const hasBgImage = !!hero?.media?.background_image?.trim() || false;
const hasPreviewVideo = !!hero?.media?.video_preview?.trim() || false;
const hasEmbed = !!hero?.media?.video_id?.trim() || false;
const hasMedia = hasImage || hasPreviewVideo;
---

{
  hero && (
    <div
      class={`hero-funnel parallax-wrap relative ${
        hero?.style?.surface || "surface-dark"
      } ${hero?.style?.class || ""} ${hero?.style?.layout || ""} ${
        hero?.style?.media || ""
      }`}
      transition:name={`hero_${slug || Math.random()}`}
      id="header"
    >
      {/** Background base */}
      <div
        class={`parallax pointer-events-none absolute inset-0 bg-${
          hero?.style?.background || ""
        }`}
      />
      {hero?.style?.pattern && (
        <div
          class="parallax absolute inset-0"
          style={`${hero?.style?.pattern || ""}  `}
        />
      )}

      {/** ✅ VÍDEO DE FUNDO */}
      {hasPreviewVideo && (
        <div class="hero-funnel__video-bg absolute inset-0 -z-10">
          <VideoInline
            url={hero.media.video_preview}
            autoplay
            muted
            loop
            playsinline
            client:idle
          >
            <Picture
              src={
                hero?.media?.thumbnail
                  ? hero.media.thumbnail
                  : "/src/assets/system/video-placeholder.jpeg"
              }
              alt={hero.title}
              aspect={hero.media?.aspect ? hero.media?.aspect : 1.777}
              layout="fill"
              loading="eager"
            />
          </VideoInline>
        </div>
      )}

      {/** ✅ OVERLAY ESCURO SOBRE O VÍDEO */}
      {hasPreviewVideo && (
        <div class="hero-funnel__overlay absolute inset-0 -z-0"></div>
      )}

      {/** ✅ OVERLAY CLICÁVEL QUE ABRE O PLAYER */}
      {hasEmbed && (
        <VideoDialogBtn
          client:visible
          video_id={hero?.media?.video_id}
          className="hero-funnel__video-overlay absolute inset-0 cursor-pointer"
        >
          <span class="sr-only">Assistir vídeo</span>
        </VideoDialogBtn>
      )}

      <div class="relative z-10 grid w-full place-items-center">
        <div
          class={`container-${hero?.style?.container || "xl"} py-14 ${
            hero?.style?.layout === "row"
              ? "hero-funnel__row-grid"
              : "hero-funnel__col-grid"
          }`}
        >
          <div class="mx-auto grid max-w-3xl gap-8 pt-20 md:pb-10">
            {hero?.title && (
              <h1 class="title" set:html={marked.parse(hero.title)} />
            )}
            {hero.intro && (
              <div
                class="balance text-lg"
                set:html={marked.parse(hero.intro)}
              />
            )}

            {hero.buttons && hero.buttons.length > 0 && (
              <div class="hero-funnel__buttons  mt-2 flex flex-wrap gap-4">
                {hero.buttons.map((btn) => (
                  <Button {...btn} />
                ))}
              </div>
            )}
            <slot />
          </div>
        </div>
      </div>

      <div class={`hero-funnel__divider z-0 -mb-px`}>
        <span class="surface-base -mb-px h-72 w-full shrink-0 md:-mb-20 md:h-40" />
        <div class="surface-base h-full w-full" />
      </div>
    </div>
  )
}

<svg
  xmlns="http://www.w3.org/2000/svg"
  width="0"
  height="0"
  viewBox="0 0 1200 220.2"
>
  <defs>
    <clipPath
      id="heroclip"
      clipPathUnits="objectBoundingBox"
      transform="scale(0.0008333, 0.0045413)"
    >
      <path
        d="M0 82.8v137.4h1200V14.3c-67.8-23.1-144.3-15.5-214.3 3-79 20.8-161.9 61.8-241.8 78.6-82.3 17.3-168.1 16.3-250.5-.4-57.8-11.7-114-31.1-172-41.9C213.6 33.9 102.5 44 0 82.8z"
      ></path>
    </clipPath>
  </defs>
</svg>

{hasEmbed && (
  <VideoDialog
    client:idle
    video_id={hero?.media?.video_id}
    embed={hero?.media?.embed}
  >
    <Icon name="close" class="w-6" />
  </VideoDialog>
)}

<style lang="postcss" is:global>
  .title {
    strong,
    bold {
      @apply text-primary;
    }
  }

  .hero-funnel__video-bg video {
    @apply object-cover w-full h-full;
  }

  .hero-funnel__video-overlay {
    background: transparent;
    z-index: 30;
  }

  .hero-funnel__overlay {
    background: linear-gradient(
      to bottom,
      rgba(0, 0, 0, 0.55) 0%,
      rgba(0, 0, 0, 0.6) 40%,
      rgba(0, 0, 0, 0.8) 100%
    );
    z-index: 10;
  }

  .hero-funnel {
    min-height: max(80vh, 30rem);
    @apply z-20 overflow-hidden grid place-items-center;

    &__buttons {
      @apply justify-center;
    }

    &__col-grid {
      @apply grid grid-cols-1 gap-10 place-items-center text-center md:text-left;

      @screen md {
        grid-template-columns: 5fr 4fr;
      }

      .hero-funnel__buttons {
        @apply md:justify-start;
      }
    }

    &__row-grid {
      @apply grid grid-cols-1 text-center gap-10;
    }

    &__divider {
      @apply absolute bottom-0 left-0 right-0 overflow-hidden flex flex-col;

      min-height: 5rem;
      min-width: 1200px;

      & > span {
        @apply block;
        clip-path: url(#heroclip);
      }
    }

    &.row {
      .hero-funnel__divider {
        height: calc(100% - 80vh);
      }
    }
  }
</style>
